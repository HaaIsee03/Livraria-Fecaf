{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/livros.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CadastrarAtualizarLivrosComponent {\n  constructor(livrosService, route, router) {\n    this.livrosService = livrosService;\n    this.route = route;\n    this.router = router;\n    this.livroForm = new FormGroup({\n      titulo: new FormControl('', Validators.required),\n      ano: new FormControl(2000, Validators.required),\n      quantidade: new FormControl(0, Validators.required)\n    });\n    this.livroId = 0;\n  }\n  ngOnInit() {\n    this.livroId = Number(this.route.snapshot.paramMap.get('id'));\n    if (this.livroId) {\n      this.livrosService.buscarLivroPorId(this.livroId).subscribe(livro => {\n        this.livroForm.setValue({\n          titulo: livro.titulo,\n          ano: livro.ano || 2000,\n          quantidade: livro.quantidade || 0\n        });\n      });\n    }\n  }\n  cadastrarOuEditar() {\n    if (this.livroId) {\n      this.editar();\n    } else {\n      this.cadastrar();\n    }\n  }\n  cadastrar() {\n    const livro = this.livroForm.value;\n    this.livrosService.cadastrarLivro(livro).subscribe(result => {\n      Swal.fire('Tudo certo!', 'Cadastro realizado com sucesso!', 'success');\n      this.livroForm.setValue({\n        titulo: '',\n        ano: 2000,\n        quantidade: 0\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n  editar() {\n    const livro = this.livroForm.value;\n    this.livrosService.editarLivro(this.livroId, livro).subscribe(result => {\n      Swal.fire('Tudo certo!', 'Edição realizada com sucesso!', 'success');\n      this.router.navigate(['/livros']);\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nCadastrarAtualizarLivrosComponent.ɵfac = function CadastrarAtualizarLivrosComponent_Factory(t) {\n  return new (t || CadastrarAtualizarLivrosComponent)(i0.ɵɵdirectiveInject(i1.LivrosService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nCadastrarAtualizarLivrosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastrarAtualizarLivrosComponent,\n  selectors: [[\"app-cadastrar-atualizar-livros\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"display-6\", \"pt-3\", \"text-center\"], [1, \"pb-3\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-6\"], [1, \"mb-3\"], [\"for\", \"titulo\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"titulo\", \"formControlName\", \"titulo\", 1, \"form-control\"], [1, \"col-3\"], [\"for\", \"quantidade\", 1, \"form-label\"], [\"type\", \"number\", \"min\", \"0\", \"id\", \"quantidade\", \"formControlName\", \"quantidade\", 1, \"form-control\"], [\"for\", \"ano\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"Ano\", \"formControlName\", \"ano\", 1, \"form-control\"], [\"type\", \"button\", \"routerLink\", \"/livros\", 1, \"btn\", \"btn-success\", \"me-2\"], [1, \"fa-solid\", \"fa-angles-left\"], [\"type\", \"submit\", 1, \"btn\", \"btn-warning\", 3, \"disabled\"], [1, \"fa-solid\", \"fa-bookmark\"]],\n  template: function CadastrarAtualizarLivrosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function CadastrarAtualizarLivrosComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.cadastrarOuEditar();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"T\\u00EDtulo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 6)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Quantidade\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 6)(18, \"label\", 12);\n      i0.ɵɵtext(19, \"Ano\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"button\", 14);\n      i0.ɵɵelement(22, \"i\", 15);\n      i0.ɵɵtext(23, \" voltar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 16);\n      i0.ɵɵelement(25, \"i\", 17);\n      i0.ɵɵtext(26, \" Salvar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.livroId ? \"Editar\" : \"Cadastrar\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.livroForm);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"disabled\", ctx.livroForm.invalid);\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Swal","CadastrarAtualizarLivrosComponent","constructor","livrosService","route","router","titulo","required","ano","quantidade","ngOnInit","livroId","Number","snapshot","paramMap","get","buscarLivroPorId","subscribe","livro","livroForm","setValue","cadastrarOuEditar","editar","cadastrar","value","cadastrarLivro","result","fire","error","console","editarLivro","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\junio\\Documents\\trabalho java\\Livraria-FECAF\\src\\app\\pages\\cadastrar-atualizar-livros\\cadastrar-atualizar-livros.component.ts","C:\\Users\\junio\\Documents\\trabalho java\\Livraria-FECAF\\src\\app\\pages\\cadastrar-atualizar-livros\\cadastrar-atualizar-livros.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ILivro } from 'src/app/interface/livro';\nimport { LivrosService } from 'src/services/livros.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cadastrar-atualizar-livros',\n  templateUrl: './cadastrar-atualizar-livros.component.html',\n  styleUrls: ['./cadastrar-atualizar-livros.component.css']\n})\nexport class CadastrarAtualizarLivrosComponent {\n\n  livroForm = new FormGroup({\n    titulo: new FormControl('', Validators.required),\n    ano: new FormControl(2000, Validators.required),\n    quantidade: new FormControl(0, Validators.required)\n  })\n\n  constructor(private livrosService: LivrosService, private route: ActivatedRoute, private router: Router) {}\n\n  livroId = 0;\n  ngOnInit() {\n    this.livroId = Number(this.route.snapshot.paramMap.get('id'));\n    if(this.livroId) {\n        this.livrosService.buscarLivroPorId(this.livroId).subscribe((livro: ILivro) => {\n            this.livroForm.setValue({\n                titulo: livro.titulo,\n                ano: livro.ano || 2000,\n                quantidade: livro.quantidade || 0\n            })\n        });\n    }\n  }\n\n  cadastrarOuEditar() {\n    if(this.livroId) {\n        this.editar();\n    } else {\n        this.cadastrar();\n    }\n  }\n\n  cadastrar() {\n    const livro: ILivro = this.livroForm.value as ILivro;\n    this.livrosService.cadastrarLivro(livro).subscribe(result => {\n        Swal.fire(\n          'Tudo certo!',\n          'Cadastro realizado com sucesso!',\n          'success'\n        );\n        this.livroForm.setValue({\n            titulo: '',\n            ano: 2000,\n            quantidade: 0\n        })\n    }, error => {\n        console.error(error);\n    })\n  }\n\n  editar() {\n    const livro: ILivro = this.livroForm.value as ILivro;\n    this.livrosService.editarLivro(this.livroId, livro).subscribe(result => {\n        Swal.fire(\n          'Tudo certo!',\n          'Edição realizada com sucesso!',\n          'success'\n        );\n        this.router.navigate(['/livros']);\n    }, error => {\n        console.error(error);\n    })\n  }\n}\n","<h1 class=\"display-6 pt-3 text-center\">{{ livroId ? 'Editar' : 'Cadastrar' }}</h1>\n<hr class=\"pb-3\">\n\n<div class=\"container\">\n    <form [formGroup]=\"livroForm\" (ngSubmit)=\"cadastrarOuEditar()\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n            <div class=\"mb-3\">\n                <label for=\"titulo\" class=\"form-label\">Título</label>\n                <input type=\"text\" class=\"form-control\" id=\"titulo\" formControlName=\"titulo\">\n            </div>\n            </div>\n            <div class=\"col-3\">\n            <div class=\"mb-3\">\n                <label for=\"quantidade\" class=\"form-label\">Quantidade</label>\n                <input type=\"number\" min=\"0\" class=\"form-control\" id=\"quantidade\" formControlName=\"quantidade\">\n            </div>\n            </div>\n            <div class=\"col-3\">\n            <div class=\"mb-3\">\n                <label for=\"ano\" class=\"form-label\">Ano</label>\n                <input type=\"text\" class=\"form-control\" id=\"Ano\" formControlName=\"ano\">\n            </div>\n            </div>\n        </div>\n\n        <button type=\"button\" routerLink=\"/livros\" class=\"btn btn-success me-2\"><i class=\"fa-solid fa-angles-left\"></i> voltar</button>\n        <button type=\"submit\" [disabled]=\"livroForm.invalid\" class=\"btn btn-warning\"><i class=\"fa-solid fa-bookmark\"></i> Salvar</button>\n    </form>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}